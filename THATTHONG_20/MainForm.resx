<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>