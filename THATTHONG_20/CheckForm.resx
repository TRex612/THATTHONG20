<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAADrwAAA68AZW8ckkAAAAHdElNRQfnAwkONQBVklt8AAAA
        GXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAA89JREFUaEPVms2rDlEcxy9CKCJigb23
        HUsiLPwBVmxEYi0LCrG0ZcvSy+ayQyIrJUqKpZ3XQkjI+/dzuvN079zvzJwzz8w841ufmuac83t55pk5
        53dmxhrSErFFHBVXxGPxVnwTfybg+I2g7aqgL2MYO1LNFpvEaXFffBC/xd9I6MsYxp4R2MJmZ8LZdnFZ
        vBMuyDpgi6u5Q7Se0DpxUXwSLpgmwDY+1ovGNUfsF8+Fc94G+Dog5opGtFScE9+Fc9gm+DwviGEorRbX
        hXPSJcRALLXEwFvCGR4FxJKcDJeyD1ciDzFF/824ufhfOkN9gNiiHgA8KUZxY8dCbMRYKp7dTT5iX4l7
        E3Ds+tSBGJnTrJhNmYjcwFR+iguCH2b+BBxzjjY3JhVitSsAlh1NzNifxXExT+TFuWOCPm5sCsRKzFNE
        Zqxz3IAUXoi9YqYoEm17BH2djRRY7025Kqw8h10APhHbRKy2CsY4W7EQM7EPxDLadYyFyWqtSNUacVM4
        m7FQRgRR2FATuE5V/BLcwCtEXS0X2MCW81EFsYfijCqNAsd1KuOLOCUWiGGFjZMCm85XGcS+WYSSM6Wy
        g9din5glmhK2sIlt57MIYieHUD+7DkU8EztFW8L2U+F8F8ETN2wGuEbHXbFBtC183BEuBgc5hN0O15gH
        wytFV8JXbDLszoRtGteY57DoWvh0seQhh7Dn5BrznBVdC58uljzc8NGJMIueELvEKtGWsI0PfMWuNkIi
        sX+tjB/ioGhL2MaH811E+Gtxo7jGMg6JKs0Q1AwsEIFjzlUJ285nGeFmT3n8ZlQlwor0iHgpsr1fjjln
        a4hJqpNIePymTohQlchu8VXkx3GOtjLVSSRMiHWWKGWJ8IuPCzcOaCu7KqmJDJYodRaNZYksFA+EGwe0
        0adIqYkMFo11lvFliSwSD4UbB7TRp0ipiRD7YhGUWlj1KZFBYYVSS92+JDKt1OXmo5B3nR19SWTa5gNK
        2Q5iPijSsIlg243LY7eDEJlRO7tBebjB2DjgBdBksLFMPBJuHNBGH/rmx2Mz9sFDrNOuRiaWEbFbpvRj
        9+RGjtvio3BjgDb65MdhK8V34ZZppv9hE5vXgJXiEvOqzRnpA8RGjFHiZco14QyNkqQXPZkocIbdBWwS
        Yqn9HpFk+nBliKF2Epm4lKN8PY3v5L9Tkbi5RvXBQPSNnSKe3V18wsFkVzlPDCtmU5YGl0TKQrMKbFHp
        Ybtwxm5DONsoss+c3ouUSpO+2WdO2Oj8MycnChuqNEpOflU2A9jZYJsm23zguKUPz8bG/gGA+c4Hxn44
        AQAAAABJRU5ErkJggg==
</value>
  </data>
</root>